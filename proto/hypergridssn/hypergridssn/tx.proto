syntax = "proto3";

package hypergridssn.hypergridssn;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "hypergridssn/hypergridssn/params.proto";
import "hypergridssn/hypergridssn/grid_block_fee.proto";
import "hypergridssn/hypergridssn/hypergrid_node.proto";
import "hypergridssn/hypergridssn/fee_settlement_bill.proto";

// import "hypergridssn/hypergridssn/solana_account.proto";

option go_package = "hypergrid-ssn/x/hypergridssn/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams            (MsgUpdateParams           ) returns (MsgUpdateParamsResponse           );
  rpc CreateSolanaAccount     (MsgCreateSolanaAccount    ) returns (MsgCreateSolanaAccountResponse    );
  rpc UpdateSolanaAccount     (MsgUpdateSolanaAccount    ) returns (MsgUpdateSolanaAccountResponse    );
  rpc DeleteSolanaAccount     (MsgDeleteSolanaAccount    ) returns (MsgDeleteSolanaAccountResponse    );
  rpc CreateGridBlockFee      (MsgCreateGridBlockFee     ) returns (MsgCreateGridBlockFeeResponse     );
  rpc CreateHypergridNode     (MsgCreateHypergridNode    ) returns (MsgCreateHypergridNodeResponse    );
  rpc UpdateHypergridNode     (MsgUpdateHypergridNode    ) returns (MsgUpdateHypergridNodeResponse    );
  rpc DeleteHypergridNode     (MsgDeleteHypergridNode    ) returns (MsgDeleteHypergridNodeResponse    );
  rpc CreateFeeSettlementBill (MsgCreateFeeSettlementBill) returns (MsgCreateFeeSettlementBillResponse);
}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                                   "authority";
  option           (amino.name) = "hypergridssn/x/hypergridssn/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgCreateSolanaAccount {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string address = 2;
  string version = 3;
  string source  = 4;
}

message MsgCreateSolanaAccountResponse {

  // SolanaAccount solanaAccount = 1 [(gogoproto.nullable) = false];
}

message MsgUpdateSolanaAccount {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string address = 2;
  string version = 3;
}

message MsgUpdateSolanaAccountResponse {

  // SolanaAccount solanaAccount = 1 [(gogoproto.nullable) = false];
}

message MsgDeleteSolanaAccount {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string address = 2;
  string version = 3;
}

message MsgDeleteSolanaAccountResponse {}

message MsgCreateGridBlockFee {
  option (cosmos.msg.v1.signer) = "creator";
  string creator   = 1;
  string grid      = 2;
  string slot      = 3;
  string blockhash = 4;
  int32  blocktime = 5;
  string fee       = 6;
}

message MsgCreateGridBlockFeeResponse {
  uint64 id = 1;
}

message MsgCreateHypergridNode {
  option (cosmos.msg.v1.signer) = "creator";
  string creator   = 1;
  string pubkey    = 2;
  string name      = 3;
  string rpc       = 4;
  int32  role      = 5;
  int32  starttime = 6;
}

message MsgCreateHypergridNodeResponse {}

message MsgUpdateHypergridNode {
  option (cosmos.msg.v1.signer) = "creator";
  string creator   = 1;
  string pubkey    = 2;
  string name      = 3;
  string rpc       = 4;
  int32  role      = 5;
  int32  starttime = 6;
}

message MsgUpdateHypergridNodeResponse {}

message MsgDeleteHypergridNode {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string pubkey  = 2;
}

message MsgDeleteHypergridNodeResponse {}

message MsgCreateFeeSettlementBill {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  uint64  fromId  = 2;
  uint64  endId   = 3;
}

message MsgCreateFeeSettlementBillResponse {
  uint64 id = 1;
}
